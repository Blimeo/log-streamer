# Build stage
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the emitter
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o emitter ./cmd/emitter

# Final stage
FROM alpine:latest

# Install ca-certificates
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/emitter .

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Run the emitter
CMD ./emitter --target="${TARGET_URL}" --rate="${RATE}" --concurrency="${CONCURRENCY}" --packet-size="${PACKET_SIZE}" --emitter-id="${EMITTER_ID}"
